<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="noah_camera">

  <xacro:macro name="noah_camera" params="camera_size parent_link *joint_pose">

    <xacro:property name="lens_size" value="0.01"/>

    <!-- Link describing the camera "box" -->
    <link name="camera_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_size} ${camera_size} ${camera_size}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_size} ${camera_size} ${camera_size}"/>
        </geometry>
        <material name="orange"/>
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>

    <!-- Where the camera attaches to parent_link, given by param -->
    <joint name="camera_joint" type="fixed">
      <xacro:insert_block name="joint_pose"/>
      <parent link="${parent_link}" />
      <child link="camera_link" />
    </joint>

    <!-- Link and joint to position correctly the camera lens, where the sensor rays start -->
    <link name="lens_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.0001 ${lens_size} ${lens_size}" />
        </geometry>
        <material name="white"/>
      </visual>
    </link>
    <joint name="lens_camera_joint" type="fixed">
      <origin xyz="${camera_size/2} 0 0" rpy="0 0 0" />
      <parent link="camera_link" />
      <child link="lens_link"/>
    </joint>


    <!-- This next two link and joints are taken from the husky robot. They are meant to correct the kinect point cloud camera position.-->
    <!-- this link is the origin for the camera's data -->
    <link name="kinect" />
    <joint name="kinect_lens_joint" type="fixed">
      <parent link="lens_link"/>
      <child link="kinect"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!--
      The gazebo plugin aligns the depth data with the Z axis, with X=left and Y=up
      ROS expects the depth data along the X axis, with Y=left and Z=up
      This link only exists to give the gazebo plugin the correctly-oriented frame -->

    <link name="kinect_gazebo" />
    <joint name="kinect_gazebo_joint" type="fixed">
      <parent link="kinect"/>
      <child link="kinect_gazebo"/>
      <origin xyz="0.0 0 0" rpy="-1.5707963267948966 0 -1.5707963267948966"/>
    </joint>

    <gazebo reference="kinect">
      <sensor name="kinect_camera" type="depth">
        <!-- Set always_on only sensor, not on plugin -->
        <always_on>0</always_on>
        <!-- Set update_rate only sensor, not on plugin -->
        <update_rate>20</update_rate>
        <camera>
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <distortion>
            <k1>0.00000001</k1>
            <k2>0.00000001</k2>
            <k3>0.00000001</k3>
            <p1>0.00000001</p1>
            <p2>0.00000001</p2>
            <center>0.0 0.0</center>
          </distortion>
          <clip>
            <near>0.05</near>
            <far>3</far>
          </clip>
        </camera>
        <plugin name="kinect_plugin" filename="libgazebo_ros_camera.so">
          <ros>
            <namespace>noah</namespace>
          </ros>

          <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
          <frame_name>kinect_gazebo</frame_name>
          <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
          <camera_name>kinect</camera_name>
          <hack_baseline>0</hack_baseline>
          <focal_length>0</focal_length>

          <!-- No need to repeat distortion parameters or to set autoDistortion -->
          <min_depth>0.5</min_depth>
          <max_depth>3.0</max_depth>

        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="lens_link">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.4</min_angle>
              <max_angle>1.4</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>/noah</namespace>
            <remapping>~/out:=laser_scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
      </sensor>
    </gazebo>

    <!-- Gazebo color -->
    <gazebo reference="camera_link">
      <material> Gazebo/Orange </material>
    </gazebo>

  </xacro:macro>

</robot>
